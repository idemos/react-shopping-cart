{"ast":null,"code":"var _jsxFileName = \"/home/ciro/project/react-shopping-cart/src/AppList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Products from \"./components/Products.js\";\nimport CartItems from \"./components/CartItems.js\";\nimport \"./App.css\";\nimport * as product from './store/product';\nimport * as shoppingCart from './store/cart';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [msg, setMsg] = useState(\"\");\n  const products = useSelector(state => state.entities.products.list);\n  const cartItems = useSelector(state => state.entities.carts.list); //const [cartItems, setCartItems] = useState([]);\n\n  const loadProducts = async () => {\n    //const res = await fetch(\"http://localhost:5000/api/products\", { mode: 'no-cors' });\n    const res = await fetch(\"http://localhost:5000/api/products\");\n    const pro = await res.json();\n    console.log('get from api=>', pro);\n    dispatch(product.fetched(pro)); //setProducts(pro);\n  };\n\n  const loadCarts = async () => {\n    //const res = await fetch(\"http://localhost:5000/api/products\", { mode: 'no-cors' });\n    const res = await fetch(\"http://localhost:5000/api/carts\");\n    const cart = await res.json();\n    console.log('get from api=>', cart);\n    dispatch(shoppingCart.fetched(cart)); //setProducts(pro);\n  };\n\n  useEffect(() => {\n    loadProducts();\n    loadCarts();\n  }, []);\n\n  const addCart = async product => {\n    const cart = { ...product,\n      user_id: 1,\n      qta: 1,\n      product_id: product.id\n    };\n\n    try {\n      const res = await fetch(\"http://localhost:5000/api/carts\", {\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        },\n        method: \"POST\",\n        body: JSON.stringify(cart)\n      });\n      const output = await res.json();\n\n      if (!output.error) {\n        dispatch(shoppingCart.added({\n          cart\n        }));\n        loadCarts();\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const removeCart = async id => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/carts/\" + id, {\n        method: \"DELETE\"\n      });\n      const output = await res.json(); //setMsg(output);\n\n      if (!output.error) {\n        dispatch(shoppingCart.removed({\n          id\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n    } //cartItems_clone = cartItems_clone.filter((cart)=> cart.id !== id);\n    //setCartItems(cartItems_clone.filter((cart) => cart.id !== id));\n    //console.log(\"remove cart\", id);\n\n  };\n\n  const checkout = user => {\n    console.log(user);\n    alert(\"checkout inviato con successo\");\n  };\n\n  console.log(\"productslist=>\", products);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(Products, {\n          data: products,\n          addCart: addCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [msg, /*#__PURE__*/_jsxDEV(CartItems, {\n          cartItems: cartItems,\n          removeCart: removeCart,\n          checkout: checkout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"k724R9COwvWFKI7im/gBt50YH9E=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ciro/project/react-shopping-cart/src/AppList.js"],"names":["useEffect","useState","Products","CartItems","product","shoppingCart","useDispatch","useSelector","App","props","dispatch","msg","setMsg","products","state","entities","list","cartItems","carts","loadProducts","res","fetch","pro","json","console","log","fetched","loadCarts","cart","addCart","user_id","qta","product_id","id","headers","method","body","JSON","stringify","output","error","added","err","removeCart","removed","checkout","user","alert"],"mappings":";;;AAAA,SAASA,SAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AACA,OAAO,KAAKC,YAAZ,MAA8B,cAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAIA,MAAMC,GAAG,GAAIC,KAAD,IAAY;AAAA;;AAEtB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMY,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,QAAf,CAAwBG,IAApC,CAA5B;AACA,QAAMC,SAAS,GAAGV,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeG,KAAf,CAAqBF,IAAjC,CAA7B,CALsB,CAMtB;;AAEA,QAAMG,YAAY,GAAG,YAAY;AAC/B;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAAvB;AACA,UAAMC,GAAG,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAlB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BH,GAA7B;AACAZ,IAAAA,QAAQ,CAACN,OAAO,CAACsB,OAAR,CAAgBJ,GAAhB,CAAD,CAAR,CAN+B,CAO/B;AACD,GARD;;AAUA,QAAMK,SAAS,GAAG,YAAY;AAC5B;AACA,UAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAAvB;AACA,UAAMO,IAAI,GAAG,MAAMR,GAAG,CAACG,IAAJ,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,IAA9B;AACAlB,IAAAA,QAAQ,CAACL,YAAY,CAACqB,OAAb,CAAqBE,IAArB,CAAD,CAAR,CAN4B,CAO5B;AACD,GARD;;AAUA5B,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,YAAY;AACZQ,IAAAA,SAAS;AACV,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAME,OAAO,GAAG,MAAOzB,OAAP,IAAmB;AAEjC,UAAMwB,IAAI,GAAG,EAAC,GAAGxB,OAAJ;AAAa0B,MAAAA,OAAO,EAAC,CAArB;AAAwBC,MAAAA,GAAG,EAAC,CAA5B;AAA+BC,MAAAA,UAAU,EAAC5B,OAAO,CAAC6B;AAAlD,KAAb;;AAEA,QAAI;AAEF,YAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AACzDa,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADgD;AAIzDC,QAAAA,MAAM,EAAE,MAJiD;AAKzDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AALmD,OAApC,CAAvB;AAQA,YAAMW,MAAM,GAAG,MAAMnB,GAAG,CAACG,IAAJ,EAArB;;AAEA,UAAG,CAACgB,MAAM,CAACC,KAAX,EAAiB;AACf9B,QAAAA,QAAQ,CAACL,YAAY,CAACoC,KAAb,CAAmB;AAACb,UAAAA;AAAD,SAAnB,CAAD,CAAR;AACAD,QAAAA,SAAS;AACV;AAEF,KAjBD,CAiBE,OAAOe,GAAP,EAAY;AACZlB,MAAAA,OAAO,CAACgB,KAAR,CAAcE,GAAd;AACD;AACF,GAxBD;;AA0BA,QAAMC,UAAU,GAAG,MAAOV,EAAP,IAAc;AAE/B,QAAG;AACD,YAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAmCY,EAApC,EAAwC;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAxC,CAAvB;AACA,YAAMI,MAAM,GAAG,MAAMnB,GAAG,CAACG,IAAJ,EAArB,CAFC,CAGD;;AACA,UAAG,CAACgB,MAAM,CAACC,KAAX,EAAiB;AACf9B,QAAAA,QAAQ,CAACL,YAAY,CAACuC,OAAb,CAAqB;AAACX,UAAAA;AAAD,SAArB,CAAD,CAAR;AACD;AACF,KAPD,CAOC,OAAOS,GAAP,EAAY;AACXlB,MAAAA,OAAO,CAACgB,KAAR,CAAcE,GAAd;AACD,KAX8B,CAgB/B;AACA;AACA;;AACD,GAnBD;;AAqBA,QAAMG,QAAQ,GAAIC,IAAD,IAAU;AACzBtB,IAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAZ;AACAC,IAAAA,KAAK,CAAC,+BAAD,CAAL;AACD,GAHD;;AAMFvB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BZ,QAA9B;AAEA,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACM;AAAA;AAAA;AAAA;AAAA,YADN,eAEM;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,QAAhB;AAA0B,UAAA,OAAO,EAAEgB;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,mBACGlB,GADH,eAEE,QAAC,SAAD;AACE,UAAA,SAAS,EAAEM,SADb;AAEE,UAAA,UAAU,EAAE0B,UAFd;AAGE,UAAA,QAAQ,EAAEE;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFN,eAeM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfN;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAoBC,CA5GD;;GAAMrC,G;UAEaF,W,EAEAC,W,EACCA,W;;;KALdC,G;AA8GN,eAAeA,GAAf","sourcesContent":["import { useEffect,useState } from \"react\";\nimport Products from \"./components/Products.js\";\nimport CartItems from \"./components/CartItems.js\";\nimport \"./App.css\";\nimport * as product from './store/product';\nimport * as shoppingCart from './store/cart';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n\nconst App = (props) =>  {\n\n  const dispatch = useDispatch();\n  const [msg, setMsg] = useState(\"\");\n  const products = useSelector((state) => state.entities.products.list);\n  const cartItems = useSelector((state) => state.entities.carts.list);\n  //const [cartItems, setCartItems] = useState([]);\n\n  const loadProducts = async () => {\n    //const res = await fetch(\"http://localhost:5000/api/products\", { mode: 'no-cors' });\n    const res = await fetch(\"http://localhost:5000/api/products\");\n    const pro = await res.json();\n\n    console.log('get from api=>',pro);\n    dispatch(product.fetched(pro));\n    //setProducts(pro);\n  };\n\n  const loadCarts = async () => {\n    //const res = await fetch(\"http://localhost:5000/api/products\", { mode: 'no-cors' });\n    const res = await fetch(\"http://localhost:5000/api/carts\");\n    const cart = await res.json();\n\n    console.log('get from api=>', cart);\n    dispatch(shoppingCart.fetched(cart));\n    //setProducts(pro);\n  };\n\n  useEffect(() => {\n    loadProducts();\n    loadCarts();\n  }, []);\n\n  const addCart = async (product) => {\n    \n    const cart = {...product, user_id:1, qta:1, product_id:product.id}\n\n    try {\n\n      const res = await fetch(\"http://localhost:5000/api/carts\", { \n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        },\n        method: \"POST\",\n        body: JSON.stringify(cart)\n      });\n\n      const output = await res.json();\n\n      if(!output.error){\n        dispatch(shoppingCart.added({cart}));\n        loadCarts();\n      }\n\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const removeCart = async (id) => {\n\n    try{\n      const res = await fetch(\"http://localhost:5000/api/carts/\"+id, { method: \"DELETE\" });\n      const output = await res.json();\n      //setMsg(output);\n      if(!output.error){\n        dispatch(shoppingCart.removed({id}));\n      }\n    }catch (err) {\n      console.error(err);\n    }\n    \n\n\n\n    //cartItems_clone = cartItems_clone.filter((cart)=> cart.id !== id);\n    //setCartItems(cartItems_clone.filter((cart) => cart.id !== id));\n    //console.log(\"remove cart\", id);\n  };\n\n  const checkout = (user) => {\n    console.log(user);\n    alert(\"checkout inviato con successo\");\n  };\n\n\nconsole.log(\"productslist=>\", products)\n\nreturn (\n        \n  <div className=\"app\">\n        <header></header>\n        <main>\n          <div className=\"main\">\n            <Products data={products} addCart={addCart} />\n          </div>\n          <div className=\"sidebar\">\n            {msg}\n            <CartItems\n              cartItems={cartItems}\n              removeCart={removeCart}\n              checkout={checkout}\n            />\n          </div>\n        </main>\n        <footer>footer</footer>\n      </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}