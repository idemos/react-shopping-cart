[{"/home/ciro/project/react-shopping-cart/src/index.js":"1","/home/ciro/project/react-shopping-cart/src/App.js":"2","/home/ciro/project/react-shopping-cart/src/components/Products.js":"3","/home/ciro/project/react-shopping-cart/src/components/CartItems.js":"4","/home/ciro/project/react-shopping-cart/src/components/Filter.js":"5","/home/ciro/project/react-shopping-cart/src/store/product.js":"6","/home/ciro/project/react-shopping-cart/src/store/index.js":"7","/home/ciro/project/react-shopping-cart/src/store/reducer.js":"8","/home/ciro/project/react-shopping-cart/src/AppList.js":"9","/home/ciro/project/react-shopping-cart/src/store/cart.js":"10"},{"size":644,"mtime":1624110941504,"results":"11","hashOfConfig":"12"},{"size":3675,"mtime":1624115071676,"results":"13","hashOfConfig":"12"},{"size":2756,"mtime":1625199532690,"results":"14","hashOfConfig":"12"},{"size":3501,"mtime":1625302667919,"results":"15","hashOfConfig":"12"},{"size":1011,"mtime":1624077478267,"results":"16","hashOfConfig":"12"},{"size":2371,"mtime":1625029858663,"results":"17","hashOfConfig":"12"},{"size":229,"mtime":1625029863375,"results":"18","hashOfConfig":"12"},{"size":281,"mtime":1624340463721,"results":"19","hashOfConfig":"12"},{"size":1497,"mtime":1625202158975,"results":"20","hashOfConfig":"12"},{"size":5328,"mtime":1625202688181,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1cyqut6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"/home/ciro/project/react-shopping-cart/src/index.js",[],["46","47"],"/home/ciro/project/react-shopping-cart/src/App.js",["48","49","50","51"],"/home/ciro/project/react-shopping-cart/src/components/Products.js",[],"/home/ciro/project/react-shopping-cart/src/components/CartItems.js",[],"/home/ciro/project/react-shopping-cart/src/components/Filter.js",[],["52","53"],"/home/ciro/project/react-shopping-cart/src/store/product.js",[],"/home/ciro/project/react-shopping-cart/src/store/index.js",[],"/home/ciro/project/react-shopping-cart/src/store/reducer.js",[],"/home/ciro/project/react-shopping-cart/src/AppList.js",["54","55"],"import { useEffect,useState } from \"react\";\nimport Products from \"./components/Products.js\";\nimport CartItems from \"./components/CartItems.js\";\nimport \"./App.css\";\n//import * as product from './store/product';\nimport {loadProducts} from './store/product';\nimport {loadCarts, addCart, removeCart, emptyCart} from './store/cart';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n\nconst App = (props) =>  {\n\n  const dispatch = useDispatch();\n  const [msg, setMsg] = useState(\"\");\n  const products = useSelector((state) => state.entities.products.list);\n  const cartItems = useSelector((state) => state.entities.carts.list);\n  //const [cartItems, setCartItems] = useState([]);\n\n\n  function loadData() {\n    loadProducts(dispatch);\n    loadCarts(dispatch);\n  }\n\n\n  useEffect(() => {\n    loadData()\n  }, []);\n\n\n  const checkout = (user) => {\n    //console.log(user);\n    alert(\"checkout inviato con successo\");\n  };\n\n\n//console.log(\"productslist=>\", products)\n\nreturn (\n        \n  <div className=\"app\">\n        <header></header>\n        <main>\n          <div className=\"main\">\n            <Products data={products} addCart={addCart} />\n          </div>\n          <div className=\"sidebar\">\n            {msg}\n            <CartItems\n              cartItems={cartItems}\n              removeCart={removeCart}\n              emptyCart={emptyCart}\n              checkout={checkout}\n            />\n          </div>\n        </main>\n        <footer>footer</footer>\n      </div>\n  );\n}\n\nexport default App;","/home/ciro/project/react-shopping-cart/src/store/cart.js",["56"],"import { createSlice } from \"@reduxjs/toolkit\";\n\n// action types\n// we dont need anymore\nlet lastId = 0;\nconst slice = createSlice({\n    name:\"carts\",\n    initialState:{\n        list:[],\n        loading:false,\n        lastFetch:null,\n        lastAdded:null,\n        msg:''\n    },\n    reducers:{\n        added: (carts, action) => {\n            console.log(\"payload\",action.payload);\n\n            if (carts.list.length > 0) {\n                // const index = carts.list.findIndex(function(cart) {\n                //     //console.log(cart.id+\" == \"+action.payload.cart.product_id+\" && \"+cart.user_id+\" == \"+action.payload.cart.user_id);\n                //     console.log(\"tutto \", cart.id === action.payload.cart.product_id && cart.user_id === action.payload.cart.user_id);\n                //     // console.log(\"prima \", cart.id === action.payload.cart.product_id);\n                //     // console.log(\"seconda \", cart.user_id === action.payload.cart.user_id);\n                //     if (parseInt(cart.product_id) === parseInt(action.payload.cart.product_id) && parseInt(cart.user_id) === parseInt(action.payload.cart.user_id)){\n                //         return true;\n                //     }\n                //     return false;\n\n                // });\n\n                const index = carts.list.findIndex((cart) => (parseInt(cart.product_id) === parseInt(action.payload.cart.product_id) && parseInt(cart.user_id) === parseInt(action.payload.cart.user_id)));\n                console.log(index);\n\n          \n                if (index >= 0) {\n                    carts.msg = \"The Article is already added\";\n                    carts.list[index].qta = (carts.list[index].qta ? ++carts.list[index].qta : 1);\n                    carts.list[index].price = (carts.list[index].price ? (carts.list[index].price + action.payload.cart.price) : action.payload.cart.price);\n                    //setCartItems(cartItems_clone);\n                } else {\n                    carts.msg = \"The Article added\";\n                    // setCartItems([...cartItems_clone, { ...product, qta: 1 }]);\n                    carts.list.push({\n                        ...action.payload.cart,\n                    });\n                }\n            } else {\n                carts.msg = \"The Article added\";\n                // setCartItems([{ ...product, qta: 1 }]);\n                carts.list.push({\n                    ...action.payload.cart\n                });\n            }\n\n            carts.lastAdded = { ...action.payload.cart };\n            return carts;\n\n        },\n        fetched: (carts, action) => {\n            console.log(action.payload);\n            carts.list = action.payload;\n            carts.loading = false;\n        },\n        sorted: (carts, action) => {\n\n            carts.list.sort(function (a, b) {\n                if (action.payload.sort === \"asc\") {\n                  return a.price > b.price ? 1 : -1;\n                } else if (action.payload.sort === \"desc\") {\n                  return a.price < b.price ? 1 : -1;\n                } else {\n                  return a.id > b.id ? 1 : -1;\n                }\n            });\n        },\n        removed: (carts, action) => {\n            carts.list = carts.list.filter(cart => action.payload.id !== cart.id);\n            // const index = carts.list.findIndex(product => action.payload.id !== product.id);\n            // carts.list.slice(index,1);\n        },\n        empty: (carts, action) => {\n            //carts.list = [];\n            carts.list = carts.list.filter(cart => action.payload.user_id !== cart.user_id);\n        },\n    }\n});\n\nexport const {added, fetched, removed, sorted, empty} = slice.actions;\n//export const selectAllcarts = state => state.entities.carts;\nexport default slice.reducer;\n\nexport const loadCarts = async (dispatch) => {\n    //const res = await fetch(\"http://localhost:5000/api/products\", { mode: 'no-cors' });\n    const res = await fetch(\"http://localhost:5000/api/carts\");\n    const cart = await res.json();\n\n    console.log('get from api=>', cart);\n    dispatch(fetched(cart));\n    //setProducts(pro);\n};\n\nexport const addCart = async (dispatch, product) => {\n    \n    const cart = {...product, user_id:1, qta:1, product_id:product.id}\n\n    try {\n\n      const res = await fetch(\"http://localhost:5000/api/carts\", { \n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        },\n        method: \"POST\",\n        body: JSON.stringify(cart)\n      });\n\n      const output = await res.json();\n\n      if(!output.error){\n        dispatch(added({cart}));\n        //loadCarts();\n      }\n\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\nexport const removeCart = async (dispatch, id) => {\n\n    try{\n      const res = await fetch(\"http://localhost:5000/api/carts/\"+id, { method: \"DELETE\" });\n      const output = await res.json();\n      //setMsg(output);\n      if(!output.error){\n        dispatch(removed({id}));\n      }\n    }catch (err) {\n      console.error(err);\n    }\n};\n\nexport const emptyCart = async (dispatch, user_id) => {\n\n    try{\n      const res = await fetch(\"http://localhost:5000/api/carts/all/\"+user_id, { method: \"DELETE\" });\n      const output = await res.json();\n      //setMsg(output);\n      if(!output.error){\n        dispatch(empty({user_id}));\n      }\n    }catch (err) {\n      console.error(err);\n    }\n};",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":8,"column":9,"nodeType":"63","messageId":"64","endLine":8,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":36,"column":6,"nodeType":"67","endLine":36,"endColumn":8,"suggestions":"68"},{"ruleId":"61","severity":1,"message":"69","line":41,"column":11,"nodeType":"63","messageId":"64","endLine":41,"endColumn":26},{"ruleId":"61","severity":1,"message":"70","line":57,"column":11,"nodeType":"63","messageId":"64","endLine":57,"endColumn":26},{"ruleId":"57","replacedBy":"71"},{"ruleId":"59","replacedBy":"72"},{"ruleId":"61","severity":1,"message":"73","line":15,"column":15,"nodeType":"63","messageId":"64","endLine":15,"endColumn":21},{"ruleId":"65","severity":1,"message":"74","line":29,"column":6,"nodeType":"67","endLine":29,"endColumn":8,"suggestions":"75"},{"ruleId":"61","severity":1,"message":"76","line":5,"column":5,"nodeType":"63","messageId":"64","endLine":5,"endColumn":11},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'productListed' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadProducts'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'products_sorted' is assigned a value but never used.","'products_filter' is assigned a value but never used.",["77"],["78"],"'setMsg' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["80"],"'lastId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [loadProducts]",{"range":"85","text":"86"},"Update the dependencies array to be: [loadData]",{"range":"87","text":"88"},[1193,1195],"[loadProducts]",[807,809],"[loadData]"]